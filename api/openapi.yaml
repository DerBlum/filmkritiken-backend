openapi: 3.0.3
info:
  title: Filmkritiken-Backend
  description: Filmkritiken-Backend
  version: 1.0.0

servers:
  - url: "https://filmkritiken-backend.marsrover.418-teapot.de"
  - url: "http://localhost:8080"

paths:
  /api/filmkritiken:
    get:
      description: Retrieves all Filmkritiken as a List
      tags:
        - Filmkritiken
      parameters:
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            minimum: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Filmkritiken"
        "500":
          $ref: "#/components/responses/InternalError"

  /api/filme:
    post:
      description: Create Film
      tags:
        - Filme
      security:
        - bearerAuth: [ film.add ]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                json:
                  $ref: "#/components/schemas/FilmRequest"
                image:
                  type: string
                  format: binary
            encoding:
              json:
                contentType: application/json
              image:
                contentType: image/png, image/jpeg
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Filmkritiken"
        "400":
          description: Bad Request
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "500":
          $ref: "#/components/responses/InternalError"

  /api/filmkritiken/{filmkritikenId}/bewertungen/{username}:
    put:
      description: Add single Bewertung for Filmkritiken
      tags:
        - Bewertungen
      security:
        - bearerAuth: [bewertung.add]
      parameters:
        - in: path
          name: filmkritikenId
          required: true
          schema:
            type: string
            description: ID der Filmkritiken.
        - in: path
          name: username
          required: true
          schema:
            type: string
            description: Benutzer, für den die Wertung gilt.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetBewertungRequest"
      responses:
        "204":
          description: Success
        "400":
          description: Request data is invalid
          content:
            text/plain:
              schema:
                type: string
                example: Wertung muss zwischen 1 und 10 liegen.
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          description: Filmkritiken could not be found
          content:
            text/plain:
              schema:
                type: string
                example: Filmkritiken konnten nicht gefunden werden.
        "500":
          $ref: "#/components/responses/InternalError"

  /api/images/{imageId}:
    get:
      description: Retrieves an image file by ID
      tags:
        - Bilder
      parameters:
        - in: path
          name: imageId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Filmkritiken"
        "400":
          description: Request data is invalid
          content:
            text/plain:
              schema:
                type: string
        "404":
          description: Image could not be found
          content:
            text/plain:
              schema:
                type: string
                example: Bild konnte nicht gefunden werden.
        "500":
          $ref: "#/components/responses/InternalError"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Filmkritiken:
      type: object
      properties:
        id:
          type: string
        details:
          $ref: "#/components/schemas/FilmkritikenDetails"
        film:
          $ref: "#/components/schemas/Film"
        bewertungen:
          type: array
          items:
            $ref: "#/components/schemas/Bewertung"
      required:
        - details
        - film
        - bewertungen
    Film:
      type: object
      properties:
        titel:
          type: string
          example: John Wick
        altersfreigabe:
          type: integer
          minimum: 0
          maximum: 18
          example: 16
        erscheinungsjahr:
          type: integer
          minimum: 1900
          maximum: 2100
          example: 2014
        regie:
          type: string
          example: Chad Stahelski, David Leitch
        laenge:
          type: integer
          minimum: 1
          maximum: 600
          example: 101
        originaltitel:
          type: string
          example: John Wick
        originalsprache:
          type: string
          example: Englisch
        produktionsland:
          type: string
          example: Vereinigte Staaten
        image:
          $ref: "#/components/schemas/Image"
      required:
        - titel
    Bewertung:
      type: object
      properties:
        von:
          type: string
          description: Nutzername des Bewertenden
          example: Stefan
        wertung:
          type: integer
          minimum: 1
          maximum: 10
        enthaltung:
          description: Wenn gesetzt, gilt die Bewertung als aktive Enthaltung.
          type: boolean
          default: false
      required:
        - von
        - wertung
    Image:
      type: object
      properties:
        id:
          type: string
          example: 60cc64d3d0c374b3f9984d68
        source:
          type: string
          example: JohnWick.jpg
          deprecated: true
        copyright:
          type: string
          example: IMDb
      required:
        - copyright
    FilmkritikenDetails:
      type: object
      properties:
        beitragvon:
          type: string
          example: Stefan
        besprochenam:
          type: string
          description: Datum nach ISO 8601 / EN 28601, an dem der Film besprochen wird / wurde.
          example: "2021-04-24"
        bewertungoffen:
          type: boolean
          description: True, wenn noch Bewertungen abgegeben werden können.
          default: false
      required:
        - beitragvon
    FilmRequest:
      type: object
      properties:
        film:
          $ref: "#/components/schemas/Film"
        von:
          type: string
          description: Der Benutzer, der den Film vorgeschlagen hat.
          example: Stefan
        besprochenam:
          type: string
          description: Datum nach ISO 8601 / EN 28601, an dem der Film besprochen wird / wurde.
        bewertungoffen:
          type: boolean
          description: True, wenn noch Bewertungen abgegeben werden können.
          default: true
      required:
        - film
        - von
        - besprochenam
    SetBewertungRequest:
      type: object
      properties:
        filmkritikenId:
          type: string
          description: ID der Filmkritiken.
        wertung:
          type: integer
          minimum: 1
          maximum: 10
    SetBewertungBulkRequest:
      type: object
      properties:
        filmkritikenId:
          type: string
          description: ID der Filmkritiken.
        benutzerBewertungen:
          type: array
          items:
            $ref: "#/components/schemas/BenutzerBewertung"
    BenutzerBewertung:
      type: object
      properties:
        wertung:
          type: integer
          minimum: 1
          maximum: 10
        benutzer:
          type: string
          description: Benutzer, für den die Wertung gilt.
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    ForbiddenError:
      description: User has no permission for API call
    InternalError:
      description: Internal Error
      content:
        text/plain:
          schema:
            type: string
            example: Could not get Filmkritiken from DB
